{"version":3,"sources":["scripts/libs/bootstrap/util.js"],"names":["Util","$","toType","obj","toString","call","match","toLowerCase","isElement","nodeType","getSpecialTransitionEndEvent","bindType","transition","end","delegateType","handle","event","target","is","this","handleObj","handler","apply","arguments","transitionEndTest","window","QUnit","el","document","createElement","name","TransitionEndEvent","undefined","style","transitionEndEmulator","duration","_this","called","one","TRANSITION_END","setTimeout","triggerTransitionEnd","WebkitTransition","MozTransition","OTransition","getUID","prefix","Math","random","getElementById","getSelectorFromElement","element","selector","getAttribute","test","reflow","offsetHeight","trigger","supportsTransitionEnd","Boolean","typeCheckConfig","componentName","config","configTypes","property","hasOwnProperty","expectedTypes","value","valueType","RegExp","Error","toUpperCase","fn","emulateTransitionEnd","special","jQuery"],"mappings":"AAOA,GAAIA,MAAO,SAAUC,GAoBnB,QAASC,GAAOC,GACd,SAAUC,SAASC,KAAKF,GAAKG,MAAM,iBAAiB,GAAGC,cAGzD,QAASC,GAAUL,GACjB,OAAQA,EAAI,IAAMA,GAAKM,SAGzB,QAASC,KACP,OACEC,SAAUC,EAAWC,IACrBC,aAAcF,EAAWC,IACzBE,OAAQ,SAAgBC,GACtB,GAAIf,EAAEe,EAAMC,QAAQC,GAAGC,MACrB,MAAOH,GAAMI,UAAUC,QAAQC,MAAMH,KAAMI,aAOnD,QAASC,KACP,GAAIC,OAAOC,MACT,OAAO,CAGT,IAAIC,GAAKC,SAASC,cAAc,YAEhC,KAAK,GAAIC,KAAQC,GACf,OAAuBC,KAAnBL,EAAGM,MAAMH,GACX,OACEjB,IAAKkB,EAAmBD,GAK9B,QAAO,EAGT,QAASI,GAAsBC,GAC7B,GAAIC,GAAQjB,KAERkB,GAAS,CAYb,OAVApC,GAAEkB,MAAMmB,IAAItC,EAAKuC,eAAgB,WAC/BF,GAAS,IAGXG,WAAW,WACJH,GACHrC,EAAKyC,qBAAqBL,IAE3BD,GAEIhB,KAlET,GAAIP,IAAa,EAIbmB,GACFW,iBAAkB,sBAClBC,cAAe,gBACfC,YAAa,gCACbhC,WAAY,iBA6EVZ,GAEFuC,eAAgB,kBAEhBM,OAAQ,SAAgBC,GACtB,GAEEA,MA1FQ,IA0FKC,KAAKC,gBACXpB,SAASqB,eAAeH,GACjC,OAAOA,IAETI,uBAAwB,SAAgCC,GACtD,GAAIC,GAAWD,EAAQE,aAAa,cAOpC,OALKD,KACHA,EAAWD,EAAQE,aAAa,SAAW,GAC3CD,EAAW,WAAWE,KAAKF,GAAYA,EAAW,MAG7CA,GAETG,OAAQ,SAAgBJ,GACtB,MAAOA,GAAQK,cAEjBf,qBAAsB,SAA8BU,GAClDlD,EAAEkD,GAASM,QAAQ7C,EAAWC,MAEhC6C,sBAAuB,WACrB,MAAOC,SAAQ/C,IAEjBgD,gBAAiB,SAAyBC,EAAeC,EAAQC,GAC/D,IAAK,GAAIC,KAAYD,GACnB,GAAIA,EAAYE,eAAeD,GAAW,CACxC,GAAIE,GAAgBH,EAAYC,GAC5BG,EAAQL,EAAOE,GACfI,EAAYD,GAAS3D,EAAU2D,GAAS,UAAYjE,EAAOiE,EAE/D,KAAK,GAAIE,QAAOH,GAAeZ,KAAKc,GAClC,KAAM,IAAIE,OAAMT,EAAcU,cAAgB,aAAqBP,EAAW,oBAAsBI,EAAY,wBAAiCF,EAAgB,QAS3K,OA/DA,YACEtD,EAAaY,IAEbvB,EAAEuE,GAAGC,qBAAuBvC,EAExBlC,EAAK0D,0BACPzD,EAAEe,MAAM0D,QAAQ1E,EAAKuC,gBAAkB7B,QAyDpCV,GACP2E","file":"util.min.js","sourcesContent":["/**\n * --------------------------------------------------------------------------\n * Bootstrap (v4.0.0-alpha.6): util.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nvar Util = function ($) {\n\n  /**\n   * ------------------------------------------------------------------------\n   * Private TransitionEnd Helpers\n   * ------------------------------------------------------------------------\n   */\n\n  var transition = false;\n\n  var MAX_UID = 1000000;\n\n  var TransitionEndEvent = {\n    WebkitTransition: 'webkitTransitionEnd',\n    MozTransition: 'transitionend',\n    OTransition: 'oTransitionEnd otransitionend',\n    transition: 'transitionend'\n  };\n\n  // shoutout AngusCroll (https://goo.gl/pxwQGp)\n  function toType(obj) {\n    return {}.toString.call(obj).match(/\\s([a-zA-Z]+)/)[1].toLowerCase();\n  }\n\n  function isElement(obj) {\n    return (obj[0] || obj).nodeType;\n  }\n\n  function getSpecialTransitionEndEvent() {\n    return {\n      bindType: transition.end,\n      delegateType: transition.end,\n      handle: function handle(event) {\n        if ($(event.target).is(this)) {\n          return event.handleObj.handler.apply(this, arguments); // eslint-disable-line prefer-rest-params\n        }\n        return undefined;\n      }\n    };\n  }\n\n  function transitionEndTest() {\n    if (window.QUnit) {\n      return false;\n    }\n\n    var el = document.createElement('bootstrap');\n\n    for (var name in TransitionEndEvent) {\n      if (el.style[name] !== undefined) {\n        return {\n          end: TransitionEndEvent[name]\n        };\n      }\n    }\n\n    return false;\n  }\n\n  function transitionEndEmulator(duration) {\n    var _this = this;\n\n    var called = false;\n\n    $(this).one(Util.TRANSITION_END, function () {\n      called = true;\n    });\n\n    setTimeout(function () {\n      if (!called) {\n        Util.triggerTransitionEnd(_this);\n      }\n    }, duration);\n\n    return this;\n  }\n\n  function setTransitionEndSupport() {\n    transition = transitionEndTest();\n\n    $.fn.emulateTransitionEnd = transitionEndEmulator;\n\n    if (Util.supportsTransitionEnd()) {\n      $.event.special[Util.TRANSITION_END] = getSpecialTransitionEndEvent();\n    }\n  }\n\n  /**\n   * --------------------------------------------------------------------------\n   * Public Util Api\n   * --------------------------------------------------------------------------\n   */\n\n  var Util = {\n\n    TRANSITION_END: 'bsTransitionEnd',\n\n    getUID: function getUID(prefix) {\n      do {\n        // eslint-disable-next-line no-bitwise\n        prefix += ~~(Math.random() * MAX_UID); // \"~~\" acts like a faster Math.floor() here\n      } while (document.getElementById(prefix));\n      return prefix;\n    },\n    getSelectorFromElement: function getSelectorFromElement(element) {\n      var selector = element.getAttribute('data-target');\n\n      if (!selector) {\n        selector = element.getAttribute('href') || '';\n        selector = /^#[a-z]/i.test(selector) ? selector : null;\n      }\n\n      return selector;\n    },\n    reflow: function reflow(element) {\n      return element.offsetHeight;\n    },\n    triggerTransitionEnd: function triggerTransitionEnd(element) {\n      $(element).trigger(transition.end);\n    },\n    supportsTransitionEnd: function supportsTransitionEnd() {\n      return Boolean(transition);\n    },\n    typeCheckConfig: function typeCheckConfig(componentName, config, configTypes) {\n      for (var property in configTypes) {\n        if (configTypes.hasOwnProperty(property)) {\n          var expectedTypes = configTypes[property];\n          var value = config[property];\n          var valueType = value && isElement(value) ? 'element' : toType(value);\n\n          if (!new RegExp(expectedTypes).test(valueType)) {\n            throw new Error(componentName.toUpperCase() + ': ' + ('Option \"' + property + '\" provided type \"' + valueType + '\" ') + ('but expected type \"' + expectedTypes + '\".'));\n          }\n        }\n      }\n    }\n  };\n\n  setTransitionEndSupport();\n\n  return Util;\n}(jQuery);\n//# sourceMappingURL=util.js.map\n"]}